networks:
  default:
    name: ${DOCKER_NETWORK}
    driver: bridge

volumes:
  dust_pgsql_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${ENV_ROOT_PATH}/${DEPLOY_ENV}/data/pgsql

  dust_redis_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${ENV_ROOT_PATH}/${DEPLOY_ENV}/data/redis

  dust_elasticsearch_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${ENV_ROOT_PATH}/${DEPLOY_ENV}/data/elasticsearch

  dust_qdrant_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${ENV_ROOT_PATH}/${DEPLOY_ENV}/data/qdrant

  dust_backend_home:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${ENV_ROOT_PATH}/${DEPLOY_ENV}/data/backend-home


services:

  dust_utils:
    build:
      context: ./utils
    container_name: dust_utils
    working_dir: /workspace/scripts
    volumes:
      - ./utils/scripts:/workspace/scripts:ro

  dust_front:
    hostname: dust-front
    container_name: dust-front
    build:
      context: ./typescript
    env_file:
      - ${ENV_ROOT_PATH}/${DEPLOY_ENV}/dust.front.env
      - ${ENV_ROOT_PATH}/${DEPLOY_ENV}/dust.redis.env
    ports:
      - "3000:3000"
    depends_on:
      - dust_backend
    working_dir: /src/dust
    command: ["tail", "-f", "/dev/null"]
    volumes:
      - ${SRC_BASE_PATH}/dust:/src/dust

  dust_backend:
    hostname: dust-backend
    container_name: dust-backend
    build:
      context: ${INFRA_DOCKER_PATH}/rust
      args:
        HOST_UID: ${HOST_UID}
        HOST_GID: ${HOST_GID}
        HOST_USR: ${HOST_USR}
    depends_on:
      dust_db:
        condition: service_healthy
      dust_redis:
        condition: service_started
      dust_elasticsearch:
        condition: service_healthy
    working_dir: /app
    volumes:
      - ${SRC_BASE_PATH}/dust/core:/app
      - dust_backend_home:/home/${HOST_USR}/.cargo
    env_file:
      - ${ENV_ROOT_PATH}/${DEPLOY_ENV}/dust.backend.env
    ports:
      - "3001:3001"
    command: ["tail", "-f", "/dev/null"]

  dust_db:
    image: postgres:14.1-alpine
    hostname: dust-db
    container_name: dust-db
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 2s
      timeout: 2s
      retries: 10
    ports:
      - "5432:5432"
    volumes:
      - dust_pgsql_data:/var/lib/postgresql/data
    env_file:
      - ${ENV_ROOT_PATH}/${DEPLOY_ENV}/dust.db.env

  dust_redis:
    image: redis:7
    hostname: dust-redis
    container_name: dust-redis
    ports:
      - "6379:6379"
    volumes:
      - dust_redis_data:/data

  dust_elasticsearch:
    build:
      context: ${INFRA_DOCKER_PATH}/elasticsearch
    hostname: dust-elasticsearch
    container_name: dust-elasticsearch
    env_file:
      - ${ENV_ROOT_PATH}/${DEPLOY_ENV}/dust.elasticsearch.env
    environment:
      # TODO review default configuration.
      - discovery.type=single-node
      - xpack.security.enabled=false
      # - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=false
      # - action.auto_create_index=true
      - action.auto_create_index=false
      - xpack.license.self_generated.type=basic
      - xpack.ml.use_auto_machine_memory_percent=true
      - ELASTIC_PASSWORD
    ports:
      - "9200:9200"
    volumes:
      - dust_elasticsearch_data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'curl -u elastic:$${ELASTIC_PASSWORD} -s http://localhost:9200/_cluster/health | grep -q \"\\\"status\\\":\\\"green\\\"\"'"
        ]
      interval: 5s
      timeout: 5s
      retries: 20

  dust_qdrant:
    image: qdrant/qdrant:v1.7.3
    hostname: dust-qdrant
    container_name: dust-qdrant
    ports:
      - "6333:6333"
    volumes:
      - dust_qdrant_data:/qdrant/storage
    env_file:
      - ${ENV_ROOT_PATH}/${DEPLOY_ENV}/dust.qdrant.env
